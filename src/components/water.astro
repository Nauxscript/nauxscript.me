<div id="group" class="group" h-42 text-6 m-y-16 font-serif-naux>
  <div id="en" absolute flex flex-col>
    <span>Empty your minds,</span>
    <span>be formless,shapeless,like water.</span>
    <span>now you put water into a cup,it becomes the cup;</span>
    <span>you put it into a bottle,it becomes the bottle;</span>
    <span>you put it in a teapot,it becomes the teapot.</span>
    <span>Water can flow,or it can crash.</span>
    <span>Be water,my friend.</span>
  </div>

  <div id="cn" absolute flex flex-col>
    <span>疏雜念</span>
    <span>身如水之虛，體似水之流。</span>
    <span>入杯，即杯，</span>
    <span>至瓶，成瓶，</span>
    <span>進壺，為壺。</span>
    <span>亦舒亦急，可湍可緩。</span>
    <span>可謂人水合一也。</span>
  </div>
</div>

<svg id="filters">
  <defs>
    <filter id="threshold">
      <feColorMatrix
        in="SourceGraphic"
        type="matrix"
        values="1 0 0 0 0
									0 1 0 0 0
									0 0 1 0 0
									0 0 0 240 -110"></feColorMatrix>
    </filter>
  </defs>
</svg>

<script is:inline>
  const text1 = document.getElementById("cn");
  const text2 = document.getElementById("en");
  const container = document.getElementById("group");

  const morphTime = 1;
  // const cooldownTime = 0.25;
  let time = new Date();
  let morph = 0;

  function doMorph() {
    setMorph(fraction);
  }

  function setMorph(fraction) {
    text2.style.filter = `blur(${Math.min(8 / fraction - 8, 100)}px)`;
    text2.style.opacity = `${Math.pow(fraction, 0.4) * 100}%`;

    fraction = 1 - fraction;
    text1.style.filter = `blur(${Math.min(8 / fraction - 8, 100)}px)`;
    text1.style.opacity = `${Math.pow(fraction, 0.4) * 100}%`;
  }

  let forward = true;
  let s = 0;

  function gogo() {
    time = new Date();
    if (s >= 1) {
      console.log("111");
      morph = 0;
      forward = false;
      const _movement = beforeAnimate(movement);
      _movement()
    } else if (s <= 0) {
      console.log("222");
      morph = 0;
      forward = true;
      const _movement = beforeAnimate(movement);
      _movement()
    } else {
      console.log("333");
      forward = !forward;
      movement();
    }
  }

  function movement() {
    if (morph > 1) {
      console.log('end');
      const ending = afterAnimate()
      ending()
      return 
    };
    let newTime = new Date();
    let dt = (newTime - time) / 1000;
    time = newTime;
    morph += dt;
    let fraction = morph / morphTime;
    if (forward) s = fraction;
    if (!forward) s = 1 - fraction;
    setMorph(s);
    requestAnimationFrame(movement);
  }

  function setValue(val) {
    if (val === undefined) {
      container.style.filter = 'none'
      return
    }
    container.style.filter = `url(#threshold) blur(0.${val}px)`
  }

  let pxVal = 0;

  function beforeAnimate(cb) {
    return function loop() {
      if (pxVal <= 6) {
        setValue(pxVal);
        pxVal++;
        requestAnimationFrame(loop);
      } else {
        if (cb && typeof cb === "function") cb();
      }
    };
  }

  function afterAnimate(cb) {
    return function loop() {
      if (pxVal > 0) {
        setValue(pxVal);
        pxVal--;
        requestAnimationFrame(loop);
      } else {
        setValue()
        if (cb && typeof cb === "function") cb();
      }
    };
  }

  container.addEventListener("mouseenter", gogo);
  container.addEventListener("mouseleave", gogo);
</script>

<style>
  #group {
    /* filter: url(#threshold) blur(0.6px); */
    filter: none;
  }

  #en {
    opacity: 0;
  }

  #cn {
    /* opacity: 1; */
    /* transition: all .3s; */
  }

  @keyframes tran {
    0% {
      filter: url(#threshold) blur(-1px);
    }

    /* 50% {
    filter: url(#threshold) blur(10px);
  } */

    100% {
      filter: url(#threshold) blur(100px);
    }
  }

  #container {
    position: absolute;
    margin: auto;
    width: 100vw;
    height: 80pt;
    top: 0;
    bottom: 0;
    filter: url(#threshold) blur(0.6px);
  }

  #text1,
  #text2 {
    position: absolute;
    width: 100%;
    display: inline-block;
    font-size: 80pt;
    text-align: center;
    user-select: none;
  }
</style>

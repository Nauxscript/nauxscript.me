<svg width="0">
  <filter id="filter">
    <feTurbulence
      id="turbulence"
      type="fractalNoise"
      baseFrequency=".03"
      numOctaves="20"></feTurbulence>
    <feDisplacementMap in="SourceGraphic" scale="30"></feDisplacementMap>
  </filter>
</svg>

<div
  class="oil-lamp-container"
  absolute
  right-3
  bottom-0
  h-1000px
  w-1000px
  flex
>
  <div class="oil-lamp" absolute></div>
</div>

<style>
  .oil-lamp-container {
    /* filter: url("#filter"); */

    filter: url("#filter");
  }

  .oil-lamp {
    height: 100px;
    width: 2px;
    background: linear-gradient(#fff, #999, #ddd, #888);
    filter: blur(2px);
    bottom: 0;
  }
</style>

<script>
  const filter = document.querySelector("#turbulence");
  // let frames = 1;
  // let rad = Math.PI / 180;
  // let bfx, bfy;

  // function freqAnimation() {
  //     frames += .4

  //     bfx = 0.03;
  //     bfy = 0.03;

  //     bfx += 0.005 * Math.cos(frames * rad);
  //     bfy += 0.005 * Math.sin(frames * rad);
  //     console.log(bfx, bfy);
  //     const bf = bfx.toString() + " " + bfy.toString();
  //     filter?.setAttributeNS(null, "baseFrequency", bf);

  //     window.requestAnimationFrame(freqAnimation);
  // }

  // window.requestAnimationFrame(freqAnimation);

  let frames = 1;
  let rad = Math.PI / 180;
  let bfx, bfy;

  function freqAnimation() {
    frames += 0.4;

    if (frames <= 360 / 0.4) {
      bfx = 0.03;
      bfy = 0.03;

      bfx += 0.005 * Math.cos(frames * rad);
      bfy += 0.005 * Math.sin(frames * rad);

      const bf = bfx.toString() + " " + bfy.toString();

      window.requestAnimationFrame(freqAnimation);
    }
  }

  window.requestAnimationFrame(freqAnimation);
</script>
